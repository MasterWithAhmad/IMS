<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Inventory Management System</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Custom CSS -->
    <link href="/css/style.css" rel="stylesheet">
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h3>IMS</h3>
        </div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link" href="/">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/inventory">
                    <i class="fas fa-box"></i> Inventory
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/reports">
                    <i class="fas fa-chart-bar"></i> Reports
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/auth/logout">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container-fluid">
            <!-- Header -->
            <div class="row mb-4">
                <div class="col">
                    <h2>Transaction History Report</h2>
                    <p class="text-muted">Stock movements and adjustments history</p>
                </div>
                <div class="col text-end">
                    <a href="/reports" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Reports
                    </a>
                    <button class="btn btn-primary" onclick="window.print()">
                        <i class="fas fa-print"></i> Print Report
                    </button>
                </div>
            </div>

            <!-- Date Filter -->
            <div class="card mb-4">
                <div class="card-body">
                    <form id="dateFilterForm" class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Start Date</label>
                            <input type="date" class="form-control" id="startDate" 
                                   value="<%= new Date().toISOString().split('T')[0] %>">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">End Date</label>
                            <input type="date" class="form-control" id="endDate"
                                   value="<%= new Date().toISOString().split('T')[0] %>">
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter"></i> Filter
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Summary Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Transactions</h5>
                            <h2 class="card-text"><%= transactions.length %></h2>
                            <small>Number of stock movements</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title">Stock In</h5>
                            <h2 class="card-text">
                                <%= transactions.filter(t => t.type === 'in').reduce((sum, t) => sum + t.quantity, 0) %>
                            </h2>
                            <small>Total items added</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-danger text-white">
                        <div class="card-body">
                            <h5 class="card-title">Stock Out</h5>
                            <h2 class="card-text">
                                <%= transactions.filter(t => t.type === 'out').reduce((sum, t) => sum + t.quantity, 0) %>
                            </h2>
                            <small>Total items removed</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title">Net Change</h5>
                            <h2 class="card-text">
                                <%= transactions.reduce((sum, t) => sum + (t.type === 'in' ? t.quantity : -t.quantity), 0) %>
                            </h2>
                            <small>Net stock movement</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts Row -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Daily Transaction Volume</h5>
                        </div>
                        <div class="card-body">
                            <canvas id="dailyVolumeChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Transaction Types Distribution</h5>
                        </div>
                        <div class="card-body">
                            <canvas id="transactionTypesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Transactions Table -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Transaction Details</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped" id="transactionsTable">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Product</th>
                                    <th>Type</th>
                                    <th>Quantity</th>
                                    <th>Previous Stock</th>
                                    <th>New Stock</th>
                                    <th>Notes</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% transactions.forEach(transaction => { %>
                                    <tr>
                                        <td><%= new Date(transaction.date).toLocaleString() %></td>
                                        <td><%= transaction.product_name %></td>
                                        <td>
                                            <% if (transaction.type === 'in') { %>
                                                <span class="badge bg-success">Stock In</span>
                                            <% } else { %>
                                                <span class="badge bg-danger">Stock Out</span>
                                            <% } %>
                                        </td>
                                        <td><%= transaction.quantity %></td>
                                        <td><%= transaction.previous_stock %></td>
                                        <td><%= transaction.new_stock %></td>
                                        <td><%= transaction.notes || '-' %></td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- DataTables -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <!-- Custom JS -->
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            const table = $('#transactionsTable').DataTable({
                order: [[0, 'desc']]
            });

            // Prepare data for charts
            const transactions = <%- JSON.stringify(transactions) %>;
            
            // Group transactions by date
            const dailyVolume = transactions.reduce((acc, t) => {
                const date = t.date.split('T')[0];
                if (!acc[date]) {
                    acc[date] = { in: 0, out: 0 };
                }
                acc[date][t.type] += t.quantity;
                return acc;
            }, {});

            // Create daily volume chart
            new Chart(document.getElementById('dailyVolumeChart'), {
                type: 'line',
                data: {
                    labels: Object.keys(dailyVolume),
                    datasets: [
                        {
                            label: 'Stock In',
                            data: Object.values(dailyVolume).map(d => d.in),
                            borderColor: '#198754',
                            fill: false
                        },
                        {
                            label: 'Stock Out',
                            data: Object.values(dailyVolume).map(d => d.out),
                            borderColor: '#dc3545',
                            fill: false
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Create transaction types chart
            const typeCount = transactions.reduce((acc, t) => {
                acc[t.type] = (acc[t.type] || 0) + 1;
                return acc;
            }, {});

            new Chart(document.getElementById('transactionTypesChart'), {
                type: 'pie',
                data: {
                    labels: ['Stock In', 'Stock Out'],
                    datasets: [{
                        data: [typeCount.in || 0, typeCount.out || 0],
                        backgroundColor: ['#198754', '#dc3545']
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });

            // Handle date filter
            $('#dateFilterForm').on('submit', function(e) {
                e.preventDefault();
                const startDate = $('#startDate').val();
                const endDate = $('#endDate').val();

                table.draw();
            });

            // Custom date range filter
            $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
                const startDate = $('#startDate').val();
                const endDate = $('#endDate').val();
                const date = data[0].split(',')[0];

                if (!startDate && !endDate) return true;
                if (!startDate) return date <= endDate;
                if (!endDate) return date >= startDate;
                return date >= startDate && date <= endDate;
            });
        });
    </script>
</body>
</html> 